"use strict";globalThis.mdlr=(()=>{const e={names:/^(?:\[(?<t>[a-z]+)\])?(?<n>[-:a-z0-9]+)$/,modules:new Map,loader:new Map,checks:new Set,info:(t,n="unit")=>{const[,o,s]=e.names.exec(t)??[];return{type:o??n,n:`[${o??n}]${s}`}},load:(t,n)=>e.loader.get(t.type)(t,n)};e.loader.set("unit",((n,o)=>{const s=new t(n,o),r=e.modules.get(n.n)(s);return void 0!==r&&"[object Object]"!==Object.prototype.toString.call(r)&&(e.checks.has(n.n)||(console.error(n,"should return an object"),e.checks.add(n.n))),r})).set("mdlr",e.loader.get("unit")).set("node",(e=>require(e.n.replace("[node]",""))));class t{constructor(t,n){this.context=n??{},this.name=t.n,"mdlr"===t.type&&(this.$=t=>e[t])}require(t,n){if(this.context[t])return this.context[t];const o=e.info(t);return e.load(o,n)}}return(t,n)=>{const o=e.info(t);if(!n||n.constructor!==Function)return e.load(o,n);e.modules.set(o.n,n)}})(),mdlr("[html]tutorial-svg-clock",(e=>{const t=(new Date).getTimezoneOffset();return e.html`
<svg xmlns="http://www.w3.org/2000/svg" viewBox="-50 -50 100 100">
<circle class="dialplate" r="48" />
<text x="0" y="18" dominant-baseline="middle" text-anchor="middle" >{logo}</text>
{#each m in [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55]}
<line class="major" y1="35" y2="45" transform="rotate({6 * m})" stroke-linecap="round" />
{#each o in [1, 2, 3, 4]}
<line class="minor" y1="42" y2="45" transform="rotate({6 * (m + o)})" stroke-linecap="round" />
{/each}
{/each}
<line class="hour" y1="2" y2="-20" transform="rotate({30 * hours + minutes / 2})" stroke-linecap="round" />
<line class="minute" y1="4" y2="-30" transform="rotate({6 * minutes + seconds / 10})" stroke-linecap="round" />
<line class="second" y1="10" y2="-38" transform="rotate({6 * seconds})" stroke-linecap="round" />
</svg>`,e.css`:root {
position: absolute;
left: 0;
top: 0;
right:0;
bottom: 0;
}
.dialplate {
stroke: #eee;
fill: #111;
}
.major {
stroke: #666;
stroke-width: 1;
}
.minor {
stroke: #999;
stroke-width: 0.5;
}
.hour {
stroke: #555;
}
.minute {
stroke: #666;
}
.second {
stroke: #b00;
}
text {
font: bold 7px sans-serif;
fill: #999;
}
svg {
width: 100%;
height: 100%;
}`,class{logo="mdlr";offset=0;hours=0;minutes=0;seconds=0;#e(){const n=60*(this.offset+t)*1e3;let o=new Date(Date.now()+n);this.hours=o.getHours(),this.minutes=o.getMinutes(),this.seconds=o.getSeconds(),e.render(this)}connected(){setInterval(this.#e.bind(this),500),this.#e()}}})),mdlr("[mdlr]html-loader",(e=>{const t=new Map,n=new Map,{tokenizer:o}=e.require("html-tokenizer"),s=/^(?<item>[a-zA-Z0-9-]+(,\s*[a-zA-Z0-9-]+)?) in (?<member>[^}]+)$/,r=/^(?<n>[a-zA-Z0-9-]*)(?<d>{(?<e>[^}:]*?)(:(?<h>[^}]*))?})?$/,a=/^\{(?<code>[^}]+)\}|(?<text>.*)$/;function i(e,...n){let i="let $i=0, $t=[]; $t[0] = $e[0] = $d.createDocumentFragment();\n",c="let $i=0;\n",l=[];const d=(e,t=!0)=>{i+=e,t&&(c+=e)},$=String.raw({raw:e},...n);for(let{id:e,type:n,data:u}of o($)){let o;switch(n){case"open":const{n:n,e:$,h:h,d:m}=r.exec(e).groups,p=t.has(n),f=(u.find((e=>"xmlns"===e.key))??{}).value;if(i+=`$e[++$i] = $d.createElementNS(${f?`'${f}'`:"($t[0].namespaceURI ?? 'http://www.w3.org/1999/xhtml')"}, '${n}');\n`,m){const e=h||$||n;if("="!==e[0])i+=`$.${e} = $e[$i].$ ?? $e[$i];\n`;else{const o=e.slice(1)||"$";t.get(n).keys.forEach((e=>{d(`if(${o}.${e}) $e[$i].$.${e} = ${o}.${e};\n`)}))}}c+="++$i;\n",u.forEach((({key:e,value:t})=>{if("on"!==e){if("{}"===t&&(t=`{${e}}`),p){const n=(a.exec(t)??{}).groups;if(n.text&&(o=`$e[$i].$.${e} = '${n.text}';\n`),n.code){(n.code||e)?.split(".")[0];o=`$e[$i].$.${e} = ${n.code||e};\n`}}else o=`$e[$i].setAttribute('${e}', \`${t.replace(/\{/g,"${")}\`);\n`;d(o,-1!==t.indexOf("{"))}else{let{e:e,h:n}=r.exec(t).groups;i+=`$e[$i].addEventListener('${e}', ${n??e});\n`}})),i+="$t[0].append($e[$i]);\n",i+="$t.unshift($e[$i]);\n";break;case"text":i+="$e[++$i] = $d.createTextNode('');\n",c+="++$i;\n",o=`$e[$i].textContent = \`${u.replace(/\{/g,"${")}\`;\n`,d(o,-1!==u.indexOf("{")),i+="$t[0].append($e[$i]);\n";break;case"close":d("$t.shift();\n",!1);break;case"hint":switch(e){case"#each":{const t=s.exec(u).groups;d(`if(${t.member}?.length){ ${t.member}.forEach((${t.item}) => {\n`),l.unshift(e)}break;case":else":d(("#each"===l[0]?"});":"")+"} else {\n"),l[0]=e;break;case"/each":d(("#each"===l[0]?"});":"")+"};\n"),l.shift();break;case"#if":l.unshift(e),d(`if (${u}) {\n`);break;case":elseif":l[0]=e,d(`} else if (${u}) {\n`);break;case"/if":l.shift(),d("}\n");break;case"@html":i+="$e[++$i] = $d.createElement('template');\n",c+="++$i;\n",o=`$e[$i].innerHTML = \`\${${u}}\`;\n`,d(o,-1!==u.indexOf("{")),i+="$t[0].append($e[$i].content);\n"}}}this.create=i,this.update=c}function c(e,t,...n){const o=String.raw({raw:t},...n),s=/\s*(?<key>.+?)\s*\{(?<body>[^}]*)\}/g;let r,a="";for(;r=s.exec(o);){const{key:t,body:n}=r.groups;t.split(",").map((e=>e.trim())).forEach((t=>{0===t.indexOf(":root")?a+=`${t.replace(":root",e)} {${n}}\n`:a+=`${e} ${t} {${n}}\n`}))}const i=document.createElement("style");i.id=e,i.textContent=a,document.head.append(i)}e.$("loader").set("html",((o,s)=>{const r=o.n.replace("[html]","");if(t.has(r))return;const a={},l=new e.constructor(o,s);l.html=i.bind(a),l.css=c.bind(a,r);const d=e.$("modules").get(o.n)(l)??class{},$=new d,u=Object.getOwnPropertyNames,h=u(d.prototype),m=[...u($),...h].join(", ");!function(e,t,o){customElements.define(e,class extends HTMLElement{#t=t.bind(new o);connectedCallback(){const e=this.#t,o={nodes:[],$root:this,e:t};n.set(e,o),t.create(e,o.nodes,o.$root),e.connected?.call(e,this)}disconnectedCallback(){const e=this.#t;t.delete(e),n.delete(e),e.disconnected?.call(e,this)}get $(){return this.#t}})}(r,new Function(`//${r}\nconst $d = document, $keys = new Set([${[...u($)].map((e=>`'${e}'`)).join(",")}]); return {\nbind: $ => { ${h.map((e=>`$.${e} = $.${e}.bind($);`)).join("\n")}; return $; },\ncreate: ($, $e, $root) => {\nconst {${m}} = $\n${a.create}$root.textContent='';$root.append($e[0]);\n},\nupdate: ($, $e, $root) => {\nconst {${m}} = $;\n${a.update}},\ndelete: () => {}\n}`)(),d),l.redraw=e=>{if(!n.has(e))return;const{nodes:t,$root:o,e:s}=n.get(e);s.create(e,t,o)},l.render=e=>{if(!n.has(e))return;const{nodes:t,$root:o,e:s}=n.get(e);s.update(e,t,o)},l.redirect=e=>{const{hash:t,href:n}=window.location;window.location.href=n.replace(t,e)},t.set(r,{stateClass:d,keys:[...u($)]}),window.cache=t}))})),mdlr("[unit]html-tokenizer",(e=>{const t=/(?<key>[a-zA-Z0-9\-]+)=(?:"(?<value1>(?:\\"|[^"\r\n])*)"|(?<value2>(?:\\"|[^\x20>\r\n])*))/g,n=/(?<space>[\s]+)(?=<|$|{)|\<\/(?<close>[^>]+)\>|\<(?<open>(?<tag>[a-z0-9-]+)({[^}]*})?)[^>]*\>|{(?<hint>[#:\/@][a-z]+)[\s]*(?<body>({[^}]*}|[^{}]*)*)}|(?<text>[^<]+)/g;return{tokenizer:function*(e){n.lastIndex=0;const o=(e,t,n=null)=>({id:e,type:t,data:n});let s;for(;null!=(s=n.exec(e));){const{space:e,close:n,open:a,tag:i,hint:c,body:l,text:d}=s.groups;a?(yield o(a,"open",(r=s[0],[...r.matchAll(t)].map((e=>e.groups)).map((e=>({key:e.key,value:e.value1??e.value2}))))),s[0].endsWith("/>")&&(yield o(a,"close"))):n?yield o(n,"close"):e?yield o(null,"space",e):d?yield o(null,"text",d):c&&(yield o(c,"hint",l))}var r}}})),mdlr("[mdlr]html-loader"),mdlr("[html]tutorial-svg-clock"),document.body.innerHTML="<tutorial-svg-clock></tutorial-svg-clock>";
